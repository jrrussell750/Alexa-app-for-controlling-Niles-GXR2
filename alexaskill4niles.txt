This file details the process for controlling a Nilex GXR2 with voice commands from Alexa.  It uses a Raspberry Pi as the interface between 
an Alexa skill and the GXR2.  The raspberry pi is configured as a GXR2 controller and connected to the expansion port of the GXR2.  Then an alexa skill is
created to communicate with the raspberry pi.  Alexa voice commands are then used to control the GXR2 zone and input selections, volume levels, power, 
and infrared selections.  To make this work, the raspberry pi needs a standard load of the raspberry pi operating system with python3 installed.  
Then, the alexaskill.py program from this repository needs to be downloaded to /home/pi directory on the raspberry pi.  The ngrok application needs to 
be installed and run in a dedicated terminal session to create a connection to with the alexa server.  An alexa skill needs to be built to allow voice 
commmands to be passed to the pi.  A JSON file containing a generic script is in a file called pi.json in this repository.  It can be modified to reflect
the zone and input device names used for your specific installation.

This project requires detailed knowledge over a number of disciplines, and has a medium level of complexity.  If you have no experience writing amazon 
skills, there is an excellent tutorial that you should complete at the following URL:

              https://tutorials-raspberrypi.com/develop-your-own-raspberry-pi-alexa-skill-and-control-pi-remotely/
              
In case the URL becomes stale, you can find the tutorial by searching for "Develop Your Own Raspberry Pi Alexa Skill and Control Pi Remotely."
              
Once you've completed the tutorial, you should know enough to get started on this project.  You will create a skill on the alexa server, then copy and paste the pi.json file 
from this repository into it.  You will download the alexaskill.py file from this repository and run it on the raspberry pi.  Finally, you'll establish a 
connection between the raspberrry pi and the alexa server.  At that point, you can control the GXR2 using any alexa capable device.

To get started you'll need the following:
A working raspberry pi running a current raspberry pi operating system.
A working Niles GXR2.
At least one Amazon echo device.
A smart phone with the Amazon alexa app installed.
The amazon.com account that you are already using to access your alexa app.
Internet access.
A device with a Web browser that is powerfull enough to interact with amazon consoles.
The pi.json file from this repository.
The alexaskill.py file from this repository.

1.  Create an alexa skill

In this step, you create an alexa skill on the Amazon Web Services server.  You can use the pi.json code from this repository to define the 
intents and utterances for this skill, so creating it is very straightforward.

a.  Log into the Alexa Skills Kit Developers Console (https://developer.amazon.com/alexa/console/ask).  You will be presented 
    with the skills menu page.  Please note: You can create an account for the the amazon site during the login process, if you don't
    already have one.
b.  Click on "Create Skill".  The "Create New Skill" page will display.
c.  Enter a name for your skill and select "English US" for the locale. Click the "Next" button.  The "Experience, Model, and Hosting 
    service page will display.
d.  Click on the "Other" radio button to select it.  You will be prompted to select a model.
e.  Click on "Custom" to select it.  The border around the Custom model will turn blue, indicating that it is selected and you'll be
    prompted to select a hosting service.
f.  Click on the "Provision your Own box to select it, and then click on the "Next" button.  The "Templates" screen will display and youll
    be prompted to select a template.
g.  Click on the "Start from Scratch" skill to select it and then click on the "Next" button.  The "Review your Selections" sceen will display.
h.  Review your selection information and then click the "Create Skill" button.  Alexa will create the skill.  After a few minutes, the builder 
    will terminate.
i.  Navigate to the JSON editor under Interaction Model in the left menu pane of the console.  Delete the default JSON code
    in the editor.  
j.  Open the pi.json file in this repository.  Copy its contents and paste it into the JSON editor.
k.  Press the Save button on the json editor to save the code.  
l.  Click the "Build Skill" button in the upper right-hand corner of the screen to rebuild the skill with the new json code.  The builder will run and rebuild the skill.
l.  Go back to the skills menu page.  Your skill should be listed,

2.  Download the alexaskill.py program from this repository to the raspberry pi into the /home/pi directory and run it.

a.  From the raspberry pi, log into github and navigate to the Alexa-skill-for-Niles-GXR2 project page.
b.  locate the alexaskill.py file in the list of files and double click on it to open it.
c.  Click on the "Download Raw File" button in the upper right hand corner of the screen.  The file will download to the "Downloads" directory.
d.  Open the file manager on the raspberry pi and navigate to the Downloads directory.
e.  Move the alexaskill.py file from the Downloads directory to the /home/pi directory.
f.  Click on the raspberry icon in the upper left-hand corner of the screen and then select Programming from the menu that displays.
g.  Open a command line interface and enter the following command:
            python3 -m pip install Flask-Ask
            pip3 install --upgrade setuptools
            pip3 install 'cryptography<2.2'
            pip3 install Werkzeug==0.16.0
h.  From the programming menu, click on Thonny to select it. The Thonny development environment will display.
i.  From Thonny, click on "File" and then click on "Open" on the pop-up menu that displays.  The /home/pi directory will display.
j.  Double click on the alexaskill.py entry to select it.  Thonny will display the source code in the editor.

k.  Click on the run button to run the code.  The code will run.
l.  Verify that the code runs without errors.  If there are any errors, they are usually caused by missing or incorrectly loaded python packages.

3.  Establish a connection between the raspberry pi and amazon web services.  

    The raspberry pi needs to commmunicate with alexa over the network.  If you are familiar with networking, you already know that there are many ways to 
    to do this.   If that is the case, you can do this part on your own.  However, if you want a free and easy way to connect, you can use a service offered 
    by ngrok (www.ngrok.com).  They offer a basic tier that works well enough for a personal connection, and ngrok claims that it will be offered "free forever"
    I suggest you create a free account with them so that you can obtain an auth token that will allow you to stay connected indefinitely.  If you don't have
    the auth token your connection will time out after six hours.

a.  From your web browser, navigate to www.ngrok.com.  The ngrok home page will display.
b.  Click on the "sign up" button in the upper right-hand corner of the page.  The signup screen will display.
c.  Enter your name, email address, and a password you want to use in the text boxes provided.  Check the two check boxes and then click on the "Sign up" button.  
    ngrok will create your account and sign you in and the download ngrok page will display.
d.  Select the appropriate version 32 or 64 bit ARM) from the list to the right of the "Download" button and then click on the "Download" button.  
    ngrok will download to the /home/pi/downloads directory.   
e.  Follow the installation instructions on the download page to install ngrok on the raspberry pi.  Copy and paste the instructions for each step into a command
    line and run them.  For the last instruction, substitute "5000" for "80" for the port number.  The last instruction creates an endpoint that can be used by 
    amazon web services to connect to the raspberry pi.
f.  Locate the secure URL in the output messagess from the last command.  Right click on that URL and select "Copy URL" from the menu that pops up.  The URL will 
    be saved to the clipboard.
g.  Open the amazon web services console and navigate to the endpoint page.  A list of endpoints will display.
h.  Paste the endpoint that was copied from ngrok into the default endpoint text box and then click on the "Save" button at the top right-hand corner of the screen.
    The alexa skill will be connected to the raspberry pi.

4.  Test your skill.

    By default, your nilespi skill will be accessible from any devices that are registered with the same account used for development  You can verify the presence 
    of the skill by navigating to the Alexa app on your smartphone and then clicking on the "More" icon at the bottom right-hand corner of your screen.  Select 
    "Skills and Games"" in the list that displays, and then click on the "Your Skills" link at the top of your screen.  Swipe the line of boxes to the left to 
    expose the Dev box and then click on it to select it.  You should see the Niles Pi skill listed below.  If you don't see it, it is probably because you used
    a different alexa account to create the skill. If that is the case, re-creating the skill using the correct account should fix the problem.  

a.  On your alexa device, try the following commands.  If you have changed your wake word to something other than alexa, substitute your wake word for "alexa" in the
    first of these commands.
             Command                      Expected Reply                             Action
             alexa open niles pi          Niles pi speaking.  What do you want?      the niles pi skill opens and is awaiting a command
             set zone 1 to device 1       Living room is set to music.               device 1 is selected for zone 1
             

Some interesting facts about the Niles GXR2::

1.  It has its own internal network, complete with DHCP server that issues leases in the range of 10.100.x.x/16.  Therefore, you can't directly connect 
it to your local area network unless you want to lose connectivity to the Internet.  Fortunately, Raspberry Pi 4s have both wired and wireless connections.  
Plug the wired port into the Niles GXR2 expansion port and let the GXR2 give it an IP address.  Connect the wireless port to your local area network and let it 
get its IP address from your local DHCP server.  This will work if you are not also using addresses for your local network that are in the range of 10.100.x.x/16.  
By the way, there is a detailed paper that explains how to get around this problem on the Internet.  Search for Niles Elan integration.  
(Please note that https://www.nilesaudio.com/sites/nilesaudio.com/files/_/techsupport/ICS-System-Support/niles-elan_gxr2_ethernet.pdf was a good URL 
when I was writing these notes)

2.  The 12 RJ45 female connectors for controllers have 12 volts on pins 7 and 8.  Therefore, it is not a good idea to plug anything but controllers into 
those connectors.  Also pins 4 and 5 are used for infrared connections.  Pins 1 and 2, 3 and 6 are standard Ethernet.  I have some more detailed notes 
on this in the niles protocol packets file in this directory.

3.  The GXR2 is custom configured with a mix of device cards and unique database settings.  If you want to use it with its present configuration, you won't need
to do anything.  If you want to change the configuration, you'll need access to the GXR2 database using an intelliFile 3 interface or equivalent.  There is 
an excellent thread at https://www.avsforum.com/threads/hacking-niles-ics-system.1486873/ started by warlockd that discusses this topic.  

